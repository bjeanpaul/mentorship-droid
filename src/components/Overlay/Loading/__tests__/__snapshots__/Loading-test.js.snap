exports[`OverlayLoading should render 1`] = `
<View
  style={
    Array [
      Object {
        "backgroundColor": "#fff",
        "flex": 1,
      },
      Object {
        "backgroundColor": "rgba(246, 111, 63, 0.95)",
      },
    ]
  }>
  <View
    style={
      Array [
        Object {
          "height": 72,
          "justifyContent": "center",
          "paddingLeft": 16,
          "paddingRight": 16,
        },
        Object {},
      ]
    } />
  <View
    style={
      Object {
        "alignItems": "center",
        "flex": 1,
        "paddingTop": 64,
      }
    }>
    <Image
      source={1}
      style={
        Object {
          "height": 80,
          "transform": Array [
            Object {
              "rotate": "0deg",
            },
          ],
          "width": 80,
        }
      } />
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
      style={
        Array [
          Object {
            "color": "#003035",
            "fontFamily": "Brandon Text",
            "fontSize": 13,
            "textAlign": "center",
          },
          Object {
            "color": undefined,
            "fontSize": 20,
          },
        ]
      }>
      Waiting for the 7:18…
    </Text>
  </View>
</View>
`;

exports[`OverlayLoading should render with a dismiss button 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <BaseView
    style={
        Object {
            "backgroundColor": "rgba(246, 111, 63, 0.95)",
          }
    }>
    <Header
        style={undefined}>
        <HeaderIcon
            onPress={[Function]}
            type={1}
            uid="dismiss" />
    </Header>
    <View
        style={
            Object {
                "alignItems": "center",
                "flex": 1,
                "paddingTop": 64,
              }
        }>
        <SpinningImage />
        <Text
            style={
                Object {
                    "color": undefined,
                    "fontSize": 20,
                  }
            }>
            Waiting for the 7:18…
        </Text>
    </View>
</BaseView>,
  "nodes": Array [
    <BaseView
      style={
            Object {
                  "backgroundColor": "rgba(246, 111, 63, 0.95)",
                }
      }>
      <Header
            style={undefined}>
            <HeaderIcon
                  onPress={[Function]}
                  type={1}
                  uid="dismiss" />
      </Header>
      <View
            style={
                  Object {
                        "alignItems": "center",
                        "flex": 1,
                        "paddingTop": 64,
                      }
            }>
            <SpinningImage />
            <Text
                  style={
                        Object {
                              "color": undefined,
                              "fontSize": 20,
                            }
                  }>
                  Waiting for the 7:18…
            </Text>
      </View>
</BaseView>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 2,
      "_context": Object {},
      "_currentElement": <LoadingOverlay
        onDismissPress={[Function]}
        title="Waiting for the 7:18…" />,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": StatelessComponent {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {
          "onDismissPress": [Function],
          "title": "Waiting for the 7:18…",
        },
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 13,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": Object {
        "_currentElement": <BaseView
          style={
                    Object {
                              "backgroundColor": "rgba(246, 111, 63, 0.95)",
                            }
          }>
          <Header
                    style={undefined}>
                    <HeaderIcon
                              onPress={[Function]}
                              type={1}
                              uid="dismiss" />
          </Header>
          <View
                    style={
                              Object {
                                        "alignItems": "center",
                                        "flex": 1,
                                        "paddingTop": 64,
                                      }
                    }>
                    <SpinningImage />
                    <Text
                              style={
                                        Object {
                                                  "color": undefined,
                                                  "fontSize": 20,
                                                }
                              }>
                              Waiting for the 7:18…
                    </Text>
          </View>
</BaseView>,
        "_debugID": 2,
        "_renderedOutput": <BaseView
          style={
                    Object {
                              "backgroundColor": "rgba(246, 111, 63, 0.95)",
                            }
          }>
          <Header
                    style={undefined}>
                    <HeaderIcon
                              onPress={[Function]}
                              type={1}
                              uid="dismiss" />
          </Header>
          <View
                    style={
                              Object {
                                        "alignItems": "center",
                                        "flex": 1,
                                        "paddingTop": 64,
                                      }
                    }>
                    <SpinningImage />
                    <Text
                              style={
                                        Object {
                                                  "color": undefined,
                                                  "fontSize": 20,
                                                }
                              }>
                              Waiting for the 7:18…
                    </Text>
          </View>
</BaseView>,
      },
      "_renderedNodeType": 1,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <LoadingOverlay
    onDismissPress={[Function]}
    title="Waiting for the 7:18…" />,
}
`;
